import{d as n}from"./app.7daa44c7.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=n(`<h1 id="\u5173\u4E8Enew" tabindex="-1"><a class="header-anchor" href="#\u5173\u4E8Enew" aria-hidden="true">#</a> \u5173\u4E8ENew</h1><p><code>new</code>\u8FD0\u7B97\u7B26\u521B\u5EFA\u4E00\u4E2A\u201C\u5B9E\u4F8B\u201D</p><h2 id="\u5B9E\u9645\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u9645\u64CD\u4F5C" aria-hidden="true">#</a> \u5B9E\u9645\u64CD\u4F5C</h2><ol><li>\u521B\u5EFA\u4E00\u4E2A\u7A7A\u5BF9\u8C61<code>{}</code></li><li>\u4E3A\u6B65\u9AA4\u4E00\u7684\u5BF9\u8C61\u6DFB\u52A0<code>__proto__</code>\uFF0C\u5C06\u8BE5\u5C5E\u6027\u94FE\u63A5\u81F3\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61</li><li>\u5C06\u6B65\u9AA4\u4E00\u521B\u5EFA\u7684\u5BF9\u8C61\u4F5C\u4E3A<code>this</code>\u4E0A\u4E0B\u6587</li><li>\u5982\u679C\u8BE5\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u5BF9\u8C61\uFF0C\u8FD4\u56DE<code>this</code></li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// An example </span>
<span class="token keyword">function</span> <span class="token function">Obj</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>attr1 <span class="token operator">=</span> <span class="token string">&#39;ok&#39;</span>
<span class="token punctuation">}</span>

<span class="token comment">// New process</span>
<span class="token keyword">function</span> <span class="token function">newFunc</span><span class="token punctuation">(</span><span class="token parameter">Func<span class="token punctuation">,</span> <span class="token operator">*</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">let</span> r <span class="token operator">=</span> <span class="token function">Func</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> args<span class="token punctuation">)</span>
    a<span class="token punctuation">.</span>__proto__ <span class="token operator">=</span> <span class="token class-name">Obj</span><span class="token punctuation">.</span>prototype
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        a <span class="token operator">=</span> r<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> a<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> newO <span class="token operator">=</span> <span class="token function">newFunc</span><span class="token punctuation">(</span>Obj<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div>`,5);function e(t,o){return p}var r=s(a,[["render",e]]);export{r as default};
